/*
 * Lazy Line Painter
 * SVG Stroke animation.
 *
 * https://github.com/camoconnell/lazy-line-painter
 * http://www.camoconnell.com
 *
 * Licensed under the MIT license.
 *
 */

(function(h){var q={init:function(c){return this.each(function(){var b=h(this),a=b.data("lazyLinePainter");b.addClass("lazylinepainter");if(!a){var a=h.extend({width:null,height:null,strokeWidth:2,strokeColor:"#000",strokeOverColor:null,strokeCap:"round",strokeJoin:"round",strokeOpacity:1,onComplete:null,onUpdate:null,onStart:null,onStrokeStart:null,onStrokeComplete:null,delay:0,overrideKey:null,drawSequential:!0,speedMultiplier:1,reverse:!1,paused:!1},c),e=a.overrideKey?a.overrideKey:b.attr("id").replace("#",
""),d=a.svgData[e].dimensions.width,k=a.svgData[e].dimensions.height;a.paths=h.extend(!0,[],a.svgData[e].strokepath);null===a.width&&(a.width=d);null===a.height&&(a.height=k);e="0 0 "+d+" "+k;d=document.createElementNS("http://www.w3.org/2000/svg","svg");d.setAttributeNS(null,"viewBox",e);d.setAttribute("xmlns","http://www.w3.org/2000/svg");e=h(d);a.svg=e;b.append(a.svg);a.longestDuration=0;for(var g=a.playhead=0,d=e=a.delay*a.speedMultiplier,k=k=0;k<a.paths.length;k++)g=a.paths[k].duration*a.speedMultiplier,
d+=g;for(k=0;k<a.paths.length;k++){var l;l=a;var m=k,f=document.createElementNS("http://www.w3.org/2000/svg","path"),g=h(f);l.svg.append(g);g.attr(u(l,l.paths[m]));l=f;m=Math.ceil(l.getTotalLength());f=a.paths[k];f.positions=[];for(g=0;g<m;g++){var n=l.getPointAtLength(g);f.positions.push({x:n.x,y:n.y})}l.style.strokeDasharray=m+" "+m;l.style.strokeDashoffset=m;l.style.display="block";l.getBoundingClientRect();g=f.duration*a.speedMultiplier;g>a.longestDuration&&(a.longestDuration=g);n=a.reverse?d-=
g:a.playhead+e;f.duration=g;f.drawStartTime=n;f.el=l;f.index=k;f.length=m;f.progress=0;f.onStrokeStart=f.onStrokeStart||null;f.onStrokeComplete=f.onStrokeComplete||null;f.onStrokeStartDone=!1;f.onStrokeCompleteDone=!1;f.onStrokeUpdate=f.onStrokeUpdate||null;a.playhead+=g}a.totalDuration=a.drawSequential?a.playhead:a.longestDuration;a.totalDuration+=e;b.data("lazyLinePainter",a);b.lazylinepainter("resize")}})},paint:function(){return this.each(function(){var c=h(this),b=c.data("lazyLinePainter");c.lazylinepainter("erase");
b.rAF=requestAnimationFrame(function(a){p(a,b)});if(null!==b.onStart)b.onStart()})},pauseResume:function(){return this.each(function(){var c=h(this).data("lazyLinePainter");c.paused?(c.paused=!1,requestAnimationFrame(function(b){v(b,c)})):(c.paused=!0,cancelAnimationFrame(c.rAF))})},erase:function(){return this.each(function(){var c=h(this).data("lazyLinePainter");c.startTime=null;c.elapsedTime=null;cancelAnimationFrame(c.rAF);c.onStrokeCompleteDone=!1;c.paused=!1;for(var b=0;b<c.paths.length;b++){var a=
c.paths[b];a.el.style.strokeDashoffset=a.length;a.onStrokeCompleteDone=!1;a.onStrokeStartDone=!1}})},destroy:function(){return this.each(function(){var c=h(this);c.removeData("lazyLinePainter");c.empty();c.removeClass("lazylinepainter")})},set:function(c){return this.each(function(){var b=h(this).data("lazyLinePainter");b.elapsedTime=c*b.totalDuration;r(b)})},get:function(){return h(this).data("lazyLinePainter")},resize:function(){this.each(function(){var c=h(this),b=c.data("lazyLinePainter");b.offset=
c.offset();for(c=0;c<b.paths.length;c++)t(b,b.paths[c])})}},v=function(c,b){b.startTime=c-b.elapsedTime;requestAnimationFrame(function(a){p(a,b)})},p=function(c,b){b.startTime||(b.startTime=c);b.elapsedTime=c-b.startTime;r(b);if(b.elapsedTime<b.totalDuration)b.rAF=requestAnimationFrame(function(a){p(a,b)});else if(null!==b.onComplete)b.onComplete()},r=function(c){if(null!==c.onUpdate)c.onUpdate();for(var b=0;b<c.paths.length;b++){var a=c.paths[b],e=void 0;c.drawSequential?(e=c.elapsedTime-a.drawStartTime,
0>e&&(e=0)):e=c.elapsedTime;var d=a;0<e&&e<d.duration?d.progress=e/d.duration:e>=d.duration?d.progress=1:e<=d.drawStartTime&&(d.progress=0);d=a;e=d.progress*d.length;d.el.style.strokeDashoffset=c.reverse||d.reverse?-d.length+e:d.length-e;t(c,a);d=c;if(1===a.progress)d.onStrokeComplete&&d.drawSequential&&!a.onStrokeCompleteDone&&(d.onStrokeComplete(a),a.onStrokeComplete||(a.onStrokeCompleteDone=!0)),a.onStrokeComplete&&d.drawSequential&&!a.onStrokeCompleteDone&&(a.onStrokeComplete(a),a.onStrokeCompleteDone=
!0);else if(1E-5<a.progress&&(d.onStrokeStart&&d.drawSequential&&!a.onStrokeStartDone&&(d.onStrokeStart(a),a.onStrokeStart||(a.onStrokeStartDone=!0)),a.onStrokeStart&&d.drawSequential&&!a.onStrokeStartDone&&(a.onStrokeStart(a),a.onStrokeStartDone=!0),a.onStrokeUpdate))a.onStrokeUpdate(a)}},t=function(c,b){var a=Math.round(b.progress*(b.length-1)),a=b.positions[a];b.position={x:c.offset.left+a.x,y:c.offset.top+a.y}},u=function(c,b){return{d:b.path,stroke:b.strokeColor?b.strokeColor:c.strokeColor,"fill-opacity":0,
"stroke-opacity":b.strokeOpacity?b.strokeOpacity:c.strokeOpacity,"stroke-width":b.strokeWidth?b.strokeWidth:c.strokeWidth,"stroke-linecap":b.strokeCap?b.strokeCap:c.strokeCap,"stroke-linejoin":b.strokeJoin?b.strokeJoin:c.strokeJoin}};h.fn.lazylinepainter=function(c){if(q[c])return q[c].apply(this,Array.prototype.slice.call(arguments,1));if("object"!==typeof c&&c)console.log("opps - issue finding method");else return q.init.apply(this,arguments)}})(jQuery);