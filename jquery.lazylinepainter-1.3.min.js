/* 
* Lazy Line Painter 1.3
* SVG Stroke animation.
*
* https://github.com/camoconnell/lazy-line-painter
* http://www.camoconnell.com
*
* Copyright 2013 Cam O'Connell
* Licensed under the MIT license.
*  
*/ 

(function(e,d){var p=0,g=["ms","moz","webkit","o"],c,q,j,h;c=0;for(q=g.length;c<q&&!d.requestAnimationFrame;++c)d.requestAnimationFrame=d[g[c]+"RequestAnimationFrame"],d.cancelAnimationFrame=d[g[c]+"CancelAnimationFrame"]||d[g[c]+"CancelRequestAnimationFrame"];d.requestAnimationFrame||(d.requestAnimationFrame=function(b){j=(new Date).getTime();h=Math.max(0,16-(j-p));p=j+h;return d.setTimeout(function(){b(j+h)},h)});d.cancelAnimationFrame||(d.cancelAnimationFrame=function(b){clearTimeout(b)});var n=
{init:function(b){return this.each(function(){var d=e(this),a=d.data("lazyLinePainter");d.addClass("lazy-line");if(!a){var a=e.extend({width:null,height:null,strokeWidth:2,strokeColor:"#000",strokeCap:"round",strokeJoin:"round",onComplete:null,delay:null,overrideKey:null},b),f=null===a.overrideKey?d.attr("id").replace("#",""):a.overrideKey,c=a.svgData[f].dimensions.width,m=a.svgData[f].dimensions.height;a.svgData=a.svgData[f].strokepath;null===a.width&&(a.width=c);null===a.height&&(a.height=m);f=
new Raphael(d.attr("id"),c,m);d.data("lazyLinePainter",{svgData:a.svgData,width:a.width,height:a.height,strokeWidth:a.strokeWidth,strokeColor:a.strokeColor,strokeCap:a.strokeCap,strokeJoin:a.strokeJoin,onComplete:a.onComplete,delay:a.delay,overrideKey:a.overrideKey,paper:f,count:0,complete:!1,playhead:0,setTimeOutHandler:[]})}})},paint:function(){return this.each(function(){function b(){setTimeout(function(){m=requestAnimationFrame(b);for(i=0;i<k.length;i++)k[i].callback()},j)}var d=e(this),a=d.data("lazyLinePainter"),
c=function(){d.css({width:a.width,height:a.height});b();e.each(a.svgData,function(b,c){var e=a.paper.path(c.path);e.attr({stroke:"none","stroke-width":a.strokeWidth,"fill-opacity":0});var f=setTimeout(function(){var b=a.paper,f=c.duration,h={stroke:!c.strokeColor?a.strokeColor:c.strokeColor,"fill-opacity":0,"stroke-width":!c.strokeWidth?a.strokeWidth:c.strokeWidth,"stroke-linecap":a.strokeCap,"stroke-linejoin":a.strokeJoin},l="string"==typeof e?b.path(e).attr({stroke:"none",fill:"none"}):e,n=b.path(l.getSubpath(0,
1)).attr(h),p=l.getTotalLength(l);l.getPointAtLength(0);var q=(new Date).getTime(),r=g;k.push({id:g,callback:function(){var b=(new Date).getTime()-q,c=l.getSubpath(0,b/f*p);h.path=c;n.animate(h,j);if(b>=f){for(i=0;i<k.length;i++)k[i].id==r&&k.splice(i,1);a.setTimeOutHandler.splice(a.count,1);a.count++;a.svgData.length==a.count&&(a.complete=!0,null!==a.onComplete&&a.onComplete.call(d),cancelAnimationFrame(m));l.remove()}}});g++},a.playhead);a.playhead+=c.duration;a.setTimeOutHandler.push(f)})},g=0,
m,j=1E3/60,k=[];null===a.delay?c():setTimeout(c,a.delay)})},erase:function(){return this.each(function(){var b=e(this);b.find("svg").empty();data=b.data("lazyLinePainter");for(i=0;i<data.setTimeOutHandler;i++)clearTimeout(data.setTimeOutHandler[i]);data.playhead=0;data.count=0;data.complete=!1})},destroy:function(){return this.each(function(){var b=e(this);b.data("lazyLinePainter");b.removeData("lazyLinePainter");b.remove()})}};e.fn.lazylinepainter=function(b){if(n[b])return n[b].apply(this,Array.prototype.slice.call(arguments,
1));if("object"===typeof b||!b)return n.init.apply(this,arguments)}})(jQuery,window);